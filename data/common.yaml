---
lookup_options:
  nrpe::commands:
    merge: hash
    strategy: deep
  nrpe::plugins:
    merge: hash
    strategy: deep

nrpe::normal_etc: '/etc'
nrpe::ensure: 'present'
nrpe::service_status: true
nrpe::service_restart: true
nrpe::config_file_owner: 'root'
nrpe::config_file_mode: '0644'
nrpe::plugin_owner: 'root'
nrpe::plugin_mode: '0755'
nrpe::manage_firewall: false
nrpe::manage_logfile: false
nrpe::firewall_priority: '200'
nrpe::manage_checkntp: true
nrpe::ntp: 'localhost'
nrpe::source:
nrpe::content:
nrpe::server:
nrpe::manage_checkzfs: false
nrpe::manage_checkznapzend: false
nrpe::zfs_verbosity: 1  # anything higher breaks on Linux
nrpe::use_zfs_sudo: false
nrpe::service: 'nrpe'
nrpe::package: 'nrpe'
nrpe::plugins_packages: ['nagios-plugins']
nrpe::config_file: '/etc/nrpe.cfg'
nrpe::config_file_group: 'root'
nrpe::pluginsdir: '/usr/libexec/nagios-plugins'
nrpe::plugin_group: 'root'
nrpe::sudoers_exe: '/usr/bin/sudo'

nrpe::plugins:
  check_myfilesize:
    source: 'puppet:///modules/nrpe/plugins/check_myfilesize.pl'

nrpe::commands:
  check_all_disks: {command: 'check_disk -w 20% -c 10% -A'}
  check_file_age: {command: 'check_file_age -w $ARG1$ -c $ARG2$ -f $ARG3$'}
  check_load: {command: 'check_load -w 15,10,5 -c 30,25,20'}
  check_mailq: {command: 'check_mailq -w 1 -c 5'}
  check_myfilesize: {command: 'check_myfilesize $ARG1$ $ARG2$ $ARG3$'}
  check_port_tcp: {command: 'check_tcp -H "$ARG1$" -p "$ARG2$"'}
  check_port_udp: {command: 'check_udp -H "$ARG1$" -p "$ARG2$"'}
  check_process: {command: 'check_procs -c 1: -C "$ARG1$"'}
  check_processwitharg: {command: 'check_procs -c 1: -C "$ARG1$" -a "$ARG2$"'}
  check_procs: {command: 'check_procs -w $ARG1$ -c $ARG2$ -a "$ARG3$"'}
  check_swap: {command: 'check_swap -w 50 -c 10'}
  check_total_procs: {command: 'check_procs -w 150 -c 200'}
  check_url:
    command: 'check_http -I "$ARG1$" -p "$ARG2$" -u "$ARG3$" -s "$ARG4$"'
  check_url_auth:
    command: >
      check_http -I "$ARG1$" -p "$ARG2$" -u "$ARG3$" -s "$ARG4$" -a "$ARG5$"
  check_users: {command: 'check_users -w 5 -c 10'}
  check_zombie_procs: {command: 'check_procs -w 5 -c 10 -s Z'}

### nrpe.cfg default settings

# LOG FACILITY
# The syslog facility that should be used for logging purposes.
nrpe::log_facility: 'daemon'

# LOG FILE
# If a log file is specified in this option, nrpe will write to
# that file instead of using syslog.
# log_file='/var/log/nrpe.log'
nrpe::log_file: '/var/log/nrpe.log'

# DEBUGGING OPTION
# This option determines whether or not debugging messages are logged to the
# syslog facility.
nrpe::debug: false

# PID FILE
# The name of the file in which the NRPE daemon should write it's process ID
# number. The file is only written if the NRPE daemon is started by the root
# user and is running in standalone mode.
nrpe::pid_file: '/var/run/nrpe.pid'

# PORT NUMBER
# Port number we should wait for connections on.
# NOTE: This must be a non-privileged port (i.e. > 1024).
# NOTE: This option is ignored if NRPE is running under either inetd
# or xinetd or via systemd. [In systemd please use
# systemctl edit nrpe.service
# to set up the port.
nrpe::server_port: 5666

# SERVER ADDRESS
# Address that nrpe should bind to in case there are more than one interface
# and you do not want nrpe to bind on all interfaces.
# NOTE: This option is ignored if NRPE is running under either inetd or xinetd
#       or with systemd. Please start by hand.
nrpe::server_address:

# LISTEN QUEUE SIZE
# Listen queue size (backlog) for serving incoming connections.
# You may want to increase this value under high load.
nrpe::listen_queue_size:

# NRPE USER
# This determines the effective user that the NRPE daemon should run as.
# You can either supply a username or a UID.
#
# NOTE: This option is ignored if NRPE is running under either inetd
# or xinetd or via systemd. [In systemd please use
# systemctl edit nrpe.service
# to set up the group.
nrpe::nrpe_user: 'nagios'

# NRPE GROUP
# This determines the effective group that the NRPE daemon should run as.
# You can either supply a group name or a GID.
#
# NOTE: This option is ignored if NRPE is running under either inetd
# or xinetd or via systemd. [In systemd please use
# systemctl edit nrpe.service
# to set up the user.
nrpe::nrpe_group: 'nagios'

# ALLOWED HOST ADDRESSES
# This is an optional comma-delimited list of IP address or hostnames
# that are allowed to talk to the NRPE daemon. Network addresses with a bit mask
# (i.e. 192.168.1.0/24) are also supported. Hostname wildcards are not currently
# supported.
#
# Note: The daemon only does rudimentary checking of the client's IP
# address. I would highly recommend adding entries in your /etc/hosts.allow
# file to allow only the specified host to connect to the port
# you are running this daemon on.
#
# NOTE: This option is ignored if NRPE is running under either inetd
# or xinetd or systemd
nrpe::allowed_hosts:
  - '127.0.0.1'
  - '::1'
  - '%{::ipaddress}'

# COMMAND ARGUMENT PROCESSING
# This option determines whether or not the NRPE daemon will allow clients
# to specify arguments to commands that are executed. This option only works
# if the daemon was configured with the --enable-command-args configure script
# option.
#
# *** ENABLING THIS OPTION IS A SECURITY RISK! ***
# Read the SECURITY file for information on some of the security implications
# of enabling this variable.
#
# Values: 0=do not allow arguments, 1=allow command arguments
nrpe::dont_blame_nrpe: false

# BASH COMMAND SUBSTITUTION
# This option determines whether or not the NRPE daemon will allow clients
# to specify arguments that contain bash command substitutions of the form
# $(...). This option only works if the daemon was configured with both
# the --enable-command-args and --enable-bash-command-substitution configure
# script options.
#
# *** ENABLING THIS OPTION IS A HIGH SECURITY RISK! ***
# Read the SECURITY file for information on some of the security implications
# of enabling this variable.
#
# Values: 0=do not allow bash command substitutions,
#         1=allow bash command substitutions
nrpe::allow_bash_command_substitution: false

# COMMAND PREFIX
# This option allows you to prefix all commands with a user-defined string.
# A space is automatically added between the specified prefix string and the
# command line from the command definition.
#
# *** THIS EXAMPLE MAY POSE A POTENTIAL SECURITY RISK, SO USE WITH CAUTION! ***
# Usage scenario:
# Execute restricted commmands using sudo. For this to work, you need to add
# the nagios user to your /etc/sudoers. An example entry for allowing
# execution of the plugins from might be:
#
# nagios          ALL=(ALL) NOPASSWD: /usr/lib/nagios/plugins/
#
# This lets the nagios user run all commands in that directory (and only them)
# without asking for a password. If you do this, make sure you don't give
# random users write access to that directory or its contents!
nrpe::command_prefix:

# MAX COMMANDS
# This specifies how many children processes may be spawned at any one
# time, essentially limiting the fork()s that occur.
# Default (0) is set to unlimited
nrpe::max_commands: 0

# COMMAND TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# allow plugins to finish executing before killing them off.
nrpe::command_timeout: 60

# CONNECTION TIMEOUT
# This specifies the maximum number of seconds that the NRPE daemon will
# wait for a connection to be established before exiting. This is sometimes
# seen where a network problem stops the SSL being established even though
# all network sessions are connected. This causes the nrpe daemons to
# accumulate, eating system resources. Do not set this too low.
nrpe::connection_timeout: 300

# WEAK RANDOM SEED OPTION
# This directive allows you to use SSL even if your system does not have
# a /dev/random or /dev/urandom (on purpose or because the necessary patches
# were not applied). The random number generator will be seeded from a file
# which is either a file pointed to by the environment valiable $RANDFILE
# or $HOME/.rnd. If neither exists, the pseudo random number generator will
# be initialized and a warning will be issued.
# Values: 0=only seed from /dev/[u]random, 1=also seed from weak randomness
nrpe::allow_weak_random_seed: false

# SSL/TLS OPTIONS
# These directives allow you to specify how to use SSL/TLS.

# SSL VERSION
# This can be any of: SSLv2 (only use SSLv2), SSLv2+ (use any version),
#        SSLv3 (only use SSLv3), SSLv3+ (use SSLv3 or above), TLSv1 (only use
#        TLSv1), TLSv1+ (use TLSv1 or above), TLSv1.1 (only use TLSv1.1),
#        TLSv1.1+ (use TLSv1.1 or above), TLSv1.2 (only use TLSv1.2),
#        TLSv1.2+ (use TLSv1.2 or above)
# If an "or above" version is used, the best will be negotiated. So if both
# ends are able to do TLSv1.2 and use specify SSLv2, you will get TLSv1.2.
# If you are using openssl 1.1.0 or above, the SSLv2 options are not available.
# ssl_version=SSLv2+
nrpe::ssl_version:

# SSL USE ADH
# This is for backward compatibility and is DEPRECATED. Set to 1 to enable
# ADH or 2 to require ADH. 1 is currently the default but will be changed
# in a later version.
nrpe::ssl_use_adh:

# SSL CIPHER LIST
# This lists which ciphers can be used. For backward compatibility, this
# defaults to 'ssl_cipher_list=ALL:!MD5:@STRENGTH' for < OpenSSL 1.1.0,
# and 'ssl_cipher_list=ALL:!MD5:@STRENGTH:@SECLEVEL=0' for OpenSSL 1.1.0 and
# greater.

# ssl_cipher_list=ALL:!MD5:@STRENGTH
# ssl_cipher_list=ALL:!MD5:@STRENGTH:@SECLEVEL=0
# ssl_cipher_list=ALL:!aNULL:!eNULL:!SSLv2:!LOW:!EXP:!RC4:!MD5:@STRENGTH
nrpe::ssl_cipher_list:

# SSL Certificate and Private Key Files
# ssl_cacert_file=/etc/ssl/servercerts/ca-cert.pem
# ssl_cert_file=/etc/ssl/servercerts/nagios-cert.pem
# ssl_privatekey_file=/etc/ssl/servercerts/nagios-key.pem
nrpe::ssl_cacert_file:
nrpe::ssl_cert_file:
nrpe::ssl_privatekey_file:

# SSL USE CLIENT CERTS
# This options determines client certificate usage.
# Values: 0: Don't ask for or require client certificates (default)
#         1: Ask for client certificates
#         2: Require client certificates
nrpe::ssl_client_certs: 0

# SSL LOGGING
# This option determines which SSL messages are send to syslog. OR values
# together to specify multiple options.

# Values: 0x00 (0): No additional logging (default)
#         0x01 (1): Log startup SSL/TLS parameters
#         0x02 (2): Log remote IP address
#         0x04 (4): Log SSL/TLS version of connections
#         0x08 (8): Log which cipher is being used for the connection
#         0x10 (16): Log if client has a certificate
#         0x20 (32): Log details of client's certificate if it has one
#         -1 or 0xff or 0x2f: All of the above
nrpe::ssl_logging: '0x00'

# NASTY METACHARACTERS
# This option allows you to override the list of characters that cannot
# be passed to the NRPE daemon.
# nasty_metachars="|`&><'\\[]{};\r\n"
nrpe::nasty_metachars:

# INCLUDE CONFIG FILE
# This directive allows you to include definitions from an external config file.
# include=<somefile.cfg>
nrpe::include:

# INCLUDE CONFIG DIRECTORY
# This directive allows you to include definitions from config files (with a
# .cfg extension) in one or more directories (with recursion).

# include_dir=<somedirectory>
# include_dir=<someotherdirectory>
nrpe::include_dir: '/etc/nrpe.d'
...
